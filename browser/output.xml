<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.0 on win32)" generated="20240126 15:36:52.820" rpa="false" schemaversion="4">
<suite id="s1" name="Api Testing" source="C:\Users\Alexandre Rodrigues\Downloads\API-Testing RobotFramework\tests\api_testing.robot">
<test id="s1-t1" name="Cenário 001: Cadastrar um novo usuário com successo na ServeRest" line="5">
<kw name="Dado que eu deseje criar um usuário novo" library="api_testing">
<kw name="Generate Random String" library="String">
<var>${random_word}</var>
<arg>length=4</arg>
<arg>chars=letters</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240126 15:36:53.132" level="INFO">${random_word} = tetl</msg>
<status status="PASS" starttime="20240126 15:36:53.132" endtime="20240126 15:36:53.132"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${random_word}</var>
<arg>${random_word}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240126 15:36:53.132" level="INFO">${random_word} = tetl</msg>
<status status="PASS" starttime="20240126 15:36:53.132" endtime="20240126 15:36:53.132"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${emailTeste}</arg>
<arg>${random_word}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:53.133" level="INFO">${emailTeste} = tetl@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:53.132" endtime="20240126 15:36:53.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${emailTeste}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.133" level="INFO">tetl@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:53.133" endtime="20240126 15:36:53.133"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.131" endtime="20240126 15:36:53.133"/>
</kw>
<kw name="Quando cadastrar o usuário na ServeRest" library="api_testing">
<arg>email=${emailTeste}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Homem Torto</arg>
<arg>email=${email}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:53.134" level="INFO">${body} = {'nome': 'Homem Torto', 'email': 'tetl@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:53.134" endtime="20240126 15:36:53.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.134" level="INFO">{'nome': 'Homem Torto', 'email': 'tetl@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:53.134" endtime="20240126 15:36:53.134"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:53.135" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240126 15:36:53.134" endtime="20240126 15:36:53.135"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240126 15:36:53.135" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240126 15:36:53.135" endtime="20240126 15:36:53.135"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.134" endtime="20240126 15:36:53.135"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20240126 15:36:53.717" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '100'} 
 body=b'{"nome": "Homem Torto", "email": "tetl@emailteste.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg timestamp="20240126 15:36:53.717" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4cd26ab73449f404845371beb056f2eb;o=1', 'Date': 'Fri, 26 Jan 2024 18:36:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9Cgte6uSzy3WzxLT"
} 
 </msg>
<msg timestamp="20240126 15:36:53.717" level="INFO">C:\Users\Alexandre Rodrigues\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240126 15:36:53.717" level="INFO">${resposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240126 15:36:53.135" endtime="20240126 15:36:53.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.718" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '9Cgte6uSzy3WzxLT'}</msg>
<status status="PASS" starttime="20240126 15:36:53.717" endtime="20240126 15:36:53.718"/>
</kw>
<if>
<branch type="IF" condition="${resposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${resposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:53.719" level="INFO">${USER_ID} = 9Cgte6uSzy3WzxLT</msg>
<status status="PASS" starttime="20240126 15:36:53.718" endtime="20240126 15:36:53.719"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.718" endtime="20240126 15:36:53.719"/>
</branch>
<status status="PASS" starttime="20240126 15:36:53.718" endtime="20240126 15:36:53.719"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:53.720" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': '9Cgte6uSzy3WzxLT'}</msg>
<status status="PASS" starttime="20240126 15:36:53.719" endtime="20240126 15:36:53.720"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.134" endtime="20240126 15:36:53.720"/>
</kw>
<kw name="Então devo conferir se o usuário foi cadastrado corretamente" library="api_testing">
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.720" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '9Cgte6uSzy3WzxLT'}</msg>
<status status="PASS" starttime="20240126 15:36:53.720" endtime="20240126 15:36:53.720"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA}</arg>
<arg>message</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:53.721" endtime="20240126 15:36:53.721"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPOSTA}</arg>
<arg>message</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:53.721" endtime="20240126 15:36:53.721"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.720" endtime="20240126 15:36:53.721"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.131" endtime="20240126 15:36:53.721"/>
</test>
<test id="s1-t2" name="Cenário 002: Cadastrar um usuário já existente" line="10">
<kw name="Dado que eu deseje criar um usuário novo" library="api_testing">
<kw name="Generate Random String" library="String">
<var>${random_word}</var>
<arg>length=4</arg>
<arg>chars=letters</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240126 15:36:53.722" level="INFO">${random_word} = eret</msg>
<status status="PASS" starttime="20240126 15:36:53.722" endtime="20240126 15:36:53.722"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${random_word}</var>
<arg>${random_word}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240126 15:36:53.722" level="INFO">${random_word} = eret</msg>
<status status="PASS" starttime="20240126 15:36:53.722" endtime="20240126 15:36:53.722"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${emailTeste}</arg>
<arg>${random_word}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:53.723" level="INFO">${emailTeste} = eret@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:53.722" endtime="20240126 15:36:53.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${emailTeste}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.723" level="INFO">eret@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:53.723" endtime="20240126 15:36:53.723"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.722" endtime="20240126 15:36:53.723"/>
</kw>
<kw name="Quando cadastrar o usuário na ServeRest" library="api_testing">
<arg>email=${emailTeste}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Homem Torto</arg>
<arg>email=${email}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:53.724" level="INFO">${body} = {'nome': 'Homem Torto', 'email': 'eret@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:53.724" endtime="20240126 15:36:53.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:53.724" level="INFO">{'nome': 'Homem Torto', 'email': 'eret@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:53.724" endtime="20240126 15:36:53.724"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:53.725" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240126 15:36:53.724" endtime="20240126 15:36:53.725"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240126 15:36:53.725" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240126 15:36:53.725" endtime="20240126 15:36:53.726"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.724" endtime="20240126 15:36:53.726"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20240126 15:36:54.063" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '100'} 
 body=b'{"nome": "Homem Torto", "email": "eret@emailteste.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg timestamp="20240126 15:36:54.063" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '50d9fccd24dc6128e8a7ff89c9779806', 'Date': 'Fri, 26 Jan 2024 18:36:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "gFYWcJc1eiklwoDx"
} 
 </msg>
<msg timestamp="20240126 15:36:54.063" level="INFO">C:\Users\Alexandre Rodrigues\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240126 15:36:54.064" level="INFO">${resposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240126 15:36:53.726" endtime="20240126 15:36:54.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.065" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'gFYWcJc1eiklwoDx'}</msg>
<status status="PASS" starttime="20240126 15:36:54.064" endtime="20240126 15:36:54.065"/>
</kw>
<if>
<branch type="IF" condition="${resposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${resposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.066" level="INFO">${USER_ID} = gFYWcJc1eiklwoDx</msg>
<status status="PASS" starttime="20240126 15:36:54.065" endtime="20240126 15:36:54.066"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.065" endtime="20240126 15:36:54.066"/>
</branch>
<status status="PASS" starttime="20240126 15:36:54.065" endtime="20240126 15:36:54.066"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.066" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'gFYWcJc1eiklwoDx'}</msg>
<status status="PASS" starttime="20240126 15:36:54.066" endtime="20240126 15:36:54.066"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.723" endtime="20240126 15:36:54.066"/>
</kw>
<kw name="E repetir o cadastro do usuário" library="api_testing">
<kw name="Quando cadastrar o usuário na ServeRest" library="api_testing">
<arg>email=${emailTeste}</arg>
<arg>status_code_desejado=400</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Homem Torto</arg>
<arg>email=${email}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:54.067" level="INFO">${body} = {'nome': 'Homem Torto', 'email': 'eret@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:54.067" endtime="20240126 15:36:54.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.067" level="INFO">{'nome': 'Homem Torto', 'email': 'eret@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:54.067" endtime="20240126 15:36:54.068"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:54.068" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240126 15:36:54.068" endtime="20240126 15:36:54.068"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240126 15:36:54.068" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240126 15:36:54.068" endtime="20240126 15:36:54.068"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.068" endtime="20240126 15:36:54.068"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20240126 15:36:54.398" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '100'} 
 body=b'{"nome": "Homem Torto", "email": "eret@emailteste.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg timestamp="20240126 15:36:54.398" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '458ad96630496f0013ff6a83d653e637', 'Date': 'Fri, 26 Jan 2024 18:36:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20240126 15:36:54.398" level="INFO">C:\Users\Alexandre Rodrigues\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240126 15:36:54.398" level="INFO">${resposta} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240126 15:36:54.068" endtime="20240126 15:36:54.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.399" level="INFO">{'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20240126 15:36:54.399" endtime="20240126 15:36:54.399"/>
</kw>
<if>
<branch type="IF" condition="${resposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${resposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20240126 15:36:54.399" endtime="20240126 15:36:54.399"/>
</kw>
<status status="NOT RUN" starttime="20240126 15:36:54.399" endtime="20240126 15:36:54.399"/>
</branch>
<status status="PASS" starttime="20240126 15:36:54.399" endtime="20240126 15:36:54.399"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.400" level="INFO">${RESPOSTA} = {'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20240126 15:36:54.400" endtime="20240126 15:36:54.400"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.067" endtime="20240126 15:36:54.400"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.067" endtime="20240126 15:36:54.400"/>
</kw>
<kw name="Então devo verificar se a API não permitiu o cadastro repetido" library="api_testing">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${resposta}</arg>
<arg>message</arg>
<arg>Este email já está sendo usado</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.400" endtime="20240126 15:36:54.400"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.400" endtime="20240126 15:36:54.400"/>
</kw>
<status status="PASS" starttime="20240126 15:36:53.722" endtime="20240126 15:36:54.401"/>
</test>
<test id="s1-t3" name="Cenário 003: Consultar os dados de um novo usuário" line="17">
<kw name="Dado que eu deseje criar um usuário novo" library="api_testing">
<kw name="Generate Random String" library="String">
<var>${random_word}</var>
<arg>length=4</arg>
<arg>chars=letters</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240126 15:36:54.402" level="INFO">${random_word} = sess</msg>
<status status="PASS" starttime="20240126 15:36:54.402" endtime="20240126 15:36:54.402"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${random_word}</var>
<arg>${random_word}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20240126 15:36:54.402" level="INFO">${random_word} = sess</msg>
<status status="PASS" starttime="20240126 15:36:54.402" endtime="20240126 15:36:54.402"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${emailTeste}</arg>
<arg>${random_word}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.403" level="INFO">${emailTeste} = sess@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:54.402" endtime="20240126 15:36:54.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${emailTeste}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.403" level="INFO">sess@emailteste.com</msg>
<status status="PASS" starttime="20240126 15:36:54.403" endtime="20240126 15:36:54.403"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.402" endtime="20240126 15:36:54.403"/>
</kw>
<kw name="Quando cadastrar o usuário na ServeRest" library="api_testing">
<arg>email=${emailTeste}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Homem Torto</arg>
<arg>email=${email}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:54.404" level="INFO">${body} = {'nome': 'Homem Torto', 'email': 'sess@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:54.404" endtime="20240126 15:36:54.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.404" level="INFO">{'nome': 'Homem Torto', 'email': 'sess@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20240126 15:36:54.404" endtime="20240126 15:36:54.404"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240126 15:36:54.404" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240126 15:36:54.404" endtime="20240126 15:36:54.404"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240126 15:36:54.405" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240126 15:36:54.404" endtime="20240126 15:36:54.405"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.404" endtime="20240126 15:36:54.405"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20240126 15:36:54.734" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '100'} 
 body=b'{"nome": "Homem Torto", "email": "sess@emailteste.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg timestamp="20240126 15:36:54.734" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7fd5b8336e37424c00ebb05790b82885', 'Date': 'Fri, 26 Jan 2024 18:36:54 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "N9UhoUn5A269iTK5"
} 
 </msg>
<msg timestamp="20240126 15:36:54.734" level="INFO">C:\Users\Alexandre Rodrigues\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240126 15:36:54.735" level="INFO">${resposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240126 15:36:54.405" endtime="20240126 15:36:54.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.735" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'N9UhoUn5A269iTK5'}</msg>
<status status="PASS" starttime="20240126 15:36:54.735" endtime="20240126 15:36:54.735"/>
</kw>
<if>
<branch type="IF" condition="${resposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${resposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.736" level="INFO">${USER_ID} = N9UhoUn5A269iTK5</msg>
<status status="PASS" starttime="20240126 15:36:54.736" endtime="20240126 15:36:54.736"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.735" endtime="20240126 15:36:54.736"/>
</branch>
<status status="PASS" starttime="20240126 15:36:54.735" endtime="20240126 15:36:54.736"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.737" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'N9UhoUn5A269iTK5'}</msg>
<status status="PASS" starttime="20240126 15:36:54.737" endtime="20240126 15:36:54.737"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.403" endtime="20240126 15:36:54.737"/>
</kw>
<kw name="E devo consultar dados do novo usuário" library="api_testing">
<kw name="GET On Session" library="RequestsLibrary">
<var>${resposta_consulta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240126 15:36:54.910" level="INFO">GET Request : url=https://serverest.dev/usuarios/N9UhoUn5A269iTK5 
 path_url=/usuarios/N9UhoUn5A269iTK5 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240126 15:36:54.910" level="INFO">GET Response : url=https://serverest.dev/usuarios/N9UhoUn5A269iTK5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b8dcf695cca7502d9866f295fbc913f4', 'Date': 'Fri, 26 Jan 2024 18:36:54 GMT', 'Server': 'Google Frontend', 'Content-Length': '149'} 
 body={
    "nome": "Homem Torto",
    "email": "sess@emailteste.com",
    "password": "1234",
    "administrador": "true",
    "_id": "N9UhoUn5A269iTK5"
} 
 </msg>
<msg timestamp="20240126 15:36:54.910" level="INFO">C:\Users\Alexandre Rodrigues\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240126 15:36:54.911" level="INFO">${resposta_consulta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240126 15:36:54.737" endtime="20240126 15:36:54.911"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESP_CONSULTA}</arg>
<arg>${resposta_consulta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240126 15:36:54.912" level="INFO">${RESP_CONSULTA} = {'nome': 'Homem Torto', 'email': 'sess@emailteste.com', 'password': '1234', 'administrador': 'true', '_id': 'N9UhoUn5A269iTK5'}</msg>
<status status="PASS" starttime="20240126 15:36:54.911" endtime="20240126 15:36:54.912"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.737" endtime="20240126 15:36:54.912"/>
</kw>
<kw name="Então conferir os dados retornados" library="api_testing">
<kw name="Log" library="BuiltIn">
<arg>${RESP_CONSULTA}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240126 15:36:54.912" level="INFO">{'nome': 'Homem Torto', 'email': 'sess@emailteste.com', 'password': '1234', 'administrador': 'true', '_id': 'N9UhoUn5A269iTK5'}</msg>
<status status="PASS" starttime="20240126 15:36:54.912" endtime="20240126 15:36:54.912"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>nome</arg>
<arg>Homem Torto</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.912" endtime="20240126 15:36:54.913"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>email</arg>
<arg>${emailTeste}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.913" endtime="20240126 15:36:54.913"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>password</arg>
<arg>1234</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.913" endtime="20240126 15:36:54.913"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>administrador</arg>
<arg>true</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.913" endtime="20240126 15:36:54.913"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>_id</arg>
<arg>${USER_ID}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20240126 15:36:54.913" endtime="20240126 15:36:54.913"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.912" endtime="20240126 15:36:54.913"/>
</kw>
<status status="PASS" starttime="20240126 15:36:54.401" endtime="20240126 15:36:54.914"/>
</test>
<status status="PASS" starttime="20240126 15:36:52.823" endtime="20240126 15:36:54.914"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Api Testing">Api Testing</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
